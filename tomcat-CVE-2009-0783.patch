Index: container/catalina/src/share/org/apache/catalina/core/StandardContext.java
===================================================================
--- container/catalina/src/share/org/apache/catalina/core/StandardContext.java	(wersja 781541)
+++ container/catalina/src/share/org/apache/catalina/core/StandardContext.java	(wersja 781542)
@@ -4140,10 +4140,6 @@
                     ((Lifecycle) pipeline).start();
                 }
                 
-                if(getProcessTlds()) {
-                    processTlds();
-                }
-                
                 // Notify our interested LifecycleListeners
                 lifecycle.fireLifecycleEvent(START_EVENT, null);
 
@@ -4278,40 +4274,6 @@
     }
 
     /**
-     * Processes TLDs.
-     *
-     * @throws LifecycleException If an error occurs
-     */
-     protected void processTlds() throws LifecycleException {
-       TldConfig tldConfig = new TldConfig();
-       tldConfig.setContext(this);
-
-       // (1)  check if the attribute has been defined
-       //      on the context element.
-       tldConfig.setTldValidation(tldValidation);
-       tldConfig.setTldNamespaceAware(tldNamespaceAware);
-
-       // (2) if the attribute wasn't defined on the context
-       //     try the host.
-       if (!tldValidation) {
-         tldConfig.setTldValidation
-           (((StandardHost) getParent()).getXmlValidation());
-       }
-
-       if (!tldNamespaceAware) {
-         tldConfig.setTldNamespaceAware
-           (((StandardHost) getParent()).getXmlNamespaceAware());
-       }
-                    
-       try {
-         tldConfig.execute();
-       } catch (Exception ex) {
-         log.error("Error reading tld listeners " 
-                    + ex.toString(), ex); 
-       }
-     }
-    
-    /**
      * Stop this Context component.
      *
      * @exception LifecycleException if a shutdown error occurs
@@ -5083,6 +5045,10 @@
                 return;
             }
         }
+        if (processTlds) {
+            this.addLifecycleListener(new TldConfig());
+        }
+
         super.init();
         
         // Notify our interested LifecycleListeners
Index: container/catalina/src/share/org/apache/catalina/startup/TldConfig.java
===================================================================
--- container/catalina/src/share/org/apache/catalina/startup/TldConfig.java	(wersja 781541)
+++ container/catalina/src/share/org/apache/catalina/startup/TldConfig.java	(wersja 781542)
@@ -49,20 +49,24 @@
 
 import org.apache.catalina.Context;
 import org.apache.catalina.Globals;
+import org.apache.catalina.Lifecycle;
+import org.apache.catalina.LifecycleEvent;
+import org.apache.catalina.LifecycleListener;
 import org.apache.catalina.core.StandardContext;
+import org.apache.catalina.core.StandardHost;
 import org.apache.catalina.util.StringManager;
 import org.apache.tomcat.util.digester.Digester;
 import org.xml.sax.InputSource;
 
 /**
- * Startup event listener for a <b>Context</b> that configures the properties
- * of that Context, and the associated defined servlets.
+ * Startup event listener for a <b>Context</b> that configures application
+ * listeners configured in any TLD files.
  *
  * @author Craig R. McClanahan
  * @author Jean-Francois Arcand
  * @author Costin Manolache
  */
-public final class TldConfig  {
+public final class TldConfig implements LifecycleListener {
 
     // Names of JARs that are known not to contain any TLDs
     private static HashSet noTldJars;
@@ -399,20 +403,6 @@
     }
 
     /**
-     * Create (if necessary) and return a Digester configured to process a tag
-     * library descriptor, looking for additional listener classes to be
-     * registered.
-     */
-    private static Digester createTldDigester() {
-
-        return DigesterFactory.newDigester(tldValidation, 
-                                           tldNamespaceAware, 
-                                           new TldRuleSet());
-
-    }
-
-
-    /**
      * Scan the JAR file at the specified resource path for TLDs in the
      * <code>META-INF</code> subdirectory, and scan each TLD for application
      * event listeners that need to be registered.
@@ -504,10 +494,6 @@
     private void tldScanStream(InputSource resourceStream)
         throws Exception {
 
-        if (tldDigester == null){
-            tldDigester = createTldDigester();
-        }
-        
         synchronized (tldDigester) {
             try {
                 tldDigester.push(this);
@@ -726,4 +712,51 @@
 
         return jarPathMap;
     }
+
+    public void lifecycleEvent(LifecycleEvent event) {
+        // Identify the context we are associated with
+        try {
+            context = (Context) event.getLifecycle();
+        } catch (ClassCastException e) {
+            log.error(sm.getString("tldConfig.cce", event.getLifecycle()), e);
+            return;
+        }
+        
+        if (event.getType().equals(Lifecycle.INIT_EVENT)) {
+            init();
+        } else if (event.getType().equals(Lifecycle.START_EVENT)) {
+            try {
+                execute();
+            } catch (Exception e) {
+                log.error(sm.getString(
+                        "tldConfig.execute", context.getPath()), e);
+            }
+        } // Ignore the other event types - nothing to do 
+    }
+    
+    private void init() {
+        if (tldDigester == null){
+            // (1)  check if the attribute has been defined
+            //      on the context element.
+            setTldValidation(context.getTldValidation());
+            setTldNamespaceAware(context.getTldNamespaceAware());
+    
+            // (2) if the attribute wasn't defined on the context
+            //     try the host.
+            if (!tldValidation) {
+              setTldValidation(
+                      ((StandardHost) context.getParent()).getXmlValidation());
+            }
+    
+            if (!tldNamespaceAware) {
+              setTldNamespaceAware(
+                      ((StandardHost) context.getParent()).getXmlNamespaceAware());
+            }
+
+            tldDigester = DigesterFactory.newDigester(tldValidation, 
+                    tldNamespaceAware, 
+                    new TldRuleSet());
+            tldDigester.getParser();
+        }
+    }
 }
Index: container/catalina/src/share/org/apache/catalina/startup/LocalStrings.properties
===================================================================
--- container/catalina/src/share/org/apache/catalina/startup/LocalStrings.properties	(wersja 781541)
+++ container/catalina/src/share/org/apache/catalina/startup/LocalStrings.properties	(wersja 781542)
@@ -87,6 +87,8 @@
 hostConfig.undeploy=Undeploying context [{0}]
 hostConfig.undeploy.error=Error undeploying web application at context path {0}
 hostConfig.undeploying=Undeploying deployed web applications
+tldConfig.cce=Lifecycle event data object {0} is not a Context
+tldConfig.execute=Error processing TLD files for context path {0}
 userConfig.database=Exception loading user database
 userConfig.deploy=Deploying web application for user {0}
 userConfig.deploying=Deploying user web applications
