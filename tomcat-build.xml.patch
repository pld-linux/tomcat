--- apache-tomcat-7.0.52-src/build.xml.orig	2014-02-13 08:40:56.000000000 +0100
+++ apache-tomcat-7.0.52-src/build.xml	2014-02-28 11:21:53.676705236 +0100
@@ -482,60 +482,6 @@
     
   </target>
 
-  <target name="validate" if="${execute.validate}"
-    depends="build-prepare,compile-prepare,download-validate"
-    description="Uses Checkstyle tool to perform style check for the source code">
-    <!-- Required so we can cache checkstyle results -->
-    <mkdir dir="${tomcat.output}/res/checkstyle"/>
-
-    <taskdef resource="checkstyletask.properties"
-             classpath="${checkstyle.jar}" />
-    <checkstyle config="res/checkstyle/checkstyle.xml">
-      <fileset dir="." >
-        <patternset refid="text.files" />
-        <include name="**/*.bat"/>
-        <include name="**/*.sh"/>
-        <exclude name="bin/setenv.*"/>
-        <exclude name=".*/**"/>
-        <exclude name="output/**"/>
-        <exclude name="modules/**"/>
-        <exclude name="**/*.mdl"/>
-        <exclude name="**/*_2.xml"/>
-        <exclude name="res/checkstyle/header-al2.txt"/>
-        <!-- Exclude auto-generated files -->
-        <exclude name="java/org/apache/el/parser/ELParser*.java" />
-        <exclude name="java/org/apache/el/parser/Node.java" />
-        <exclude name="java/org/apache/**/parser/JJT*ParserState.java" />
-        <exclude name="java/org/apache/**/parser/ParseException.java" />
-        <exclude name="java/org/apache/**/parser/SimpleCharStream.java" />
-        <exclude name="java/org/apache/**/parser/Token*.java" />
-        <!-- Exclude these else Gump runs validate on them -->
-        <exclude name="**/org/apache/tomcat/dbcp/**"/>
-        <exclude name="**/tomcat-deps/**"/>
-        <!-- Exclude simple test files -->
-        <exclude name="test/webapp-3.0/bug53257/**/*.txt"/>
-        <exclude name="test/webapp-3.0-fragments/WEB-INF/classes/*.txt"/>
-      </fileset>
-      <fileset dir="modules/jdbc-pool" >
-        <exclude name=".*/**"/>
-        <exclude name="**/MANIFEST.MF"/>
-        <patternset refid="text.files" />
-      </fileset>
-    </checkstyle>
-    <!-- javax package checks -->
-    <checkstyle config="res/checkstyle/javax-checkstyle.xml">
-      <fileset dir="java/javax" >
-        <include name="**/*.java"/>
-      </fileset>
-    </checkstyle>
-    <!-- org package checks -->
-    <checkstyle config="res/checkstyle/org-checkstyle.xml">
-      <fileset dir="java/org" >
-        <include name="**/*.java"/>
-      </fileset>
-    </checkstyle>
-  </target>
-
   <target name="validate-eoln" depends="build-prepare,compile-prepare"
     description="Validate that the source files have correct line ends">
 
@@ -595,7 +541,7 @@
   <target name="compile" depends="compile-java6,compile-java7" />
 
   <target name="compile-java6"
-          depends="build-prepare,download-compile,compile-prepare,validate">
+          depends="build-prepare">
     <!-- Compile internal server components -->
     <javac srcdir="java" destdir="${tomcat.classes}"
            debug="${compile.debug}"
@@ -937,13 +883,6 @@
   <target name="deploy" depends="package,build-docs"
           description="Default. Builds a working Tomcat instance">
 
-    <copy tofile="${tomcat.build}/bin/tomcat-native.tar.gz"
-            file="${tomcat-native.tar.gz}" />
-    <copy tofile="${tomcat.build}/bin/commons-daemon-native.tar.gz"
-            file="${commons-daemon.native.src.tgz}" />
-
-    <copy tofile="${tomcat.build}/bin/commons-daemon.jar" file="${commons-daemon.jar}" />
-
     <!-- Copy scripts -->
     <copy todir="${tomcat.build}/bin">
       <fileset dir="bin">
@@ -1198,7 +1198,7 @@
 
   </target>
 
-  <target name="test-compile" depends="compile,download-test-compile,compile-webapp-examples" >
+  <target name="test-compile" depends="compile,compile-webapp-examples" >
     <mkdir dir="${test.classes}"/>
     <!-- Compile -->
     <javac srcdir="test" destdir="${test.classes}"
@@ -1371,7 +1310,7 @@
     </path>
   </target>
 
-  <target name="cobertura-instrument" depends="compile,download-cobertura,cobertura-disabled"
+  <target name="cobertura-instrument" depends="compile,cobertura-disabled"
           if="${test.cobertura}"
           description="Adds Cobertura instrumentation to the compiled bytecode">
 
@@ -1430,52 +1369,10 @@
     <mkdir dir="${tomcat.extras}/webservices"/>
   </target>
 
-  <target name="extras-commons-logging-prepare"
-          depends="extras-prepare"
-          description="Prepare to build web services extras package">
-
-    <antcall target="downloadfile-2">
-      <param name="sourcefile.1" value="${commons-logging-src.loc.1}"/>
-      <param name="sourcefile.2" value="${commons-logging-src.loc.2}"/>
-      <param name="destfile" value="${commons-logging-src.tar.gz}"/>
-      <param name="destdir" value="${commons-logging.home}"/>
-    </antcall>
-
-    <antcall target="downloadfile">
-      <param name="sourcefile" value="${avalon-framework.loc}"/>
-      <param name="destfile" value="${avalon-framework.jar}"/>
-      <param name="destdir" value="${avalon-framework.home}"/>
-    </antcall>
-
-    <antcall target="downloadfile">
-      <param name="sourcefile" value="${log4j.loc}"/>
-      <param name="destfile" value="${log4j.jar}"/>
-      <param name="destdir" value="${log4j.home}"/>
-    </antcall>
-
-    <antcall target="downloadfile">
-      <param name="sourcefile" value="${logkit.loc}"/>
-      <param name="destfile" value="${logkit.jar}"/>
-      <param name="destdir" value="${logkit.home}"/>
-    </antcall>
-
-    <antcall target="downloadfile">
-      <param name="sourcefile" value="${servletapi.loc}"/>
-      <param name="destfile" value="${servletapi.jar}"/>
-      <param name="destdir" value="${servletapi.home}"/>
-    </antcall>
-
-  </target>
-
   <target name="extras-commons-logging"
-          depends="extras-commons-logging-prepare,compile,build-manifests"
+          depends="compile,build-manifests"
           description="Build JULI for log4j extras package">
 
-    <gunzip src="${commons-logging-src.tar.gz}"
-      dest="${tomcat.extras}/logging/commons-logging-src.tar"/>
-    <untar src="${tomcat.extras}/logging/commons-logging-src.tar"
-      dest="${tomcat.extras}/logging/"/>
-
     <replace dir="${tomcat.extras}/logging/commons-logging-${commons-logging.version}-src/src/main/java/org/apache/commons"
         encoding="ISO-8859-1">
       <replacefilter token="org.apache.commons"
@@ -1497,7 +1394,8 @@
       file="${tomcat.extras}/logging/commons-logging-${commons-logging.version}-src/build.xml" />
 
     <copy todir="${tomcat.extras}/logging/commons-logging-${commons-logging.version}-src">
-      <fileset file="${avalon-framework.jar}" />
+      <fileset file="${avalon-framework-api.jar}" />
+      <fileset file="${avalon-framework-impl.jar}" />
       <fileset file="${log4j.jar}" />
       <fileset file="${logkit.jar}" />
       <fileset file="${servletapi.jar}" />
@@ -1577,18 +1475,6 @@
           depends="extras-prepare"
           description="Prepare to build web services extras package">
 
-    <antcall target="downloadfile">
-      <param name="sourcefile" value="${jaxrpc-lib.loc}"/>
-      <param name="destfile" value="${jaxrpc-lib.jar}"/>
-      <param name="destdir" value="${jaxrpc-lib.home}"/>
-    </antcall>
-
-    <antcall target="downloadfile">
-      <param name="sourcefile" value="${wsdl4j-lib.loc}"/>
-      <param name="destfile" value="${wsdl4j-lib.jar}"/>
-      <param name="destdir" value="${wsdl4j-lib.home}"/>
-    </antcall>
-
     <copy file="${jaxrpc-lib.jar}"
           tofile="${tomcat.extras}/webservices/jaxrpc.jar" />
     <copy file="${wsdl4j-lib.jar}"
@@ -1694,7 +1580,7 @@
 
   </target>
 
-  <target name="dist-prepare" depends="download-dist">
+  <target name="dist-prepare">
     <mkdir dir="${tomcat.dist}"/>
     <mkdir dir="${tomcat.dist}/bin"/>
     <mkdir dir="${tomcat.dist}/conf"/>
